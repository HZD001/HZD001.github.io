const CustomReminderUI={init(){this.bindEvents();this.loadReminders();},bindEvents(){const enableCustomReminders=document.getElementById('enableCustomReminders');if(enableCustomReminders){enableCustomReminders.addEventListener('change',(e)=>{const section=document.getElementById('customRemindersSection');section.style.display=e.target.checked?'block':'none';});}const _0x0=document.getElementById('addReminderBtn');if(_0x0){_0x0.addEventListener('click',()=> this.addNewReminder());}const _0x1=document.getElementById('testCustomReminderBtn');if(_0x1){_0x1.addEventListener('click',()=> this.testCustomReminder());}const _0x2=document.getElementById('clearCustomRemindersBtn');if(_0x2){_0x2.addEventListener('click',()=> this.clearReminderStates());}},loadReminders(){const config=Config.loadConfig();const _0x3=document.getElementById('customRemindersList');if(_0x3&&config.customReminders){_0x3.innerHTML='';config.customReminders.forEach(reminder=>{this.renderReminder(reminder);});}},renderReminder(reminder){const _0x3=document.getElementById('customRemindersList');if(!_0x3)return;const _0x4=document.createElement('div');_0x4.className='custom-reminder-item';_0x4.dataset.reminderId=reminder.id;_0x4.innerHTML=` <div class="custom-reminder-header"> <div class="custom-reminder-title"> <span>⏰</span> <span>${reminder.title}</span> </div> <div class="custom-reminder-actions"> <button type="button" class="custom-reminder-btn delete" onclick="CustomReminderUI.removeReminder('${reminder.id}')">删除</button> </div> </div> <div class="custom-reminder-fields"> <div class="custom-reminder-field"> <label>时间</label> <input type="time" class="reminder-time" value="${reminder.time}" /> </div> <div class="custom-reminder-field"> <label>标题</label> <input type="text" class="reminder-title" value="${reminder.title}" placeholder="提醒标题" /> </div> <div class="custom-reminder-field full-width"> <label>内容</label> <textarea class="reminder-content" placeholder="提醒内容（可选）">${reminder.content||''}</textarea> </div> </div> <div class="custom-reminder-checkboxes"> <label> <input type="checkbox" class="reminder-enabled" ${reminder.enabled?'checked':''}/> 启用此提醒 </label> <label> <input type="checkbox" class="reminder-repeat" ${reminder.repeat?'checked':''}/> 每天重复 </label> </div> `;_0x3.appendChild(_0x4);},addNewReminder(){const _0x5={id:'reminder_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9),time:'09:00',title:'新提醒',content:'',enabled:true,repeat:true,notifiedDates:[]};this.renderReminder(_0x5);},removeReminder(reminderId){const _0x4=document.querySelector(`[data-reminder-id="${reminderId}"]`);if(_0x4){Config.removeCustomReminder(reminderId);_0x4.classList.add('removing');setTimeout(()=>{_0x4.remove();},300);if(typeof Timer !=='undefined'&&Timer.config){Timer.config=Config.loadConfig();}}},testCustomReminder(){const config=Config.loadConfig();const _0x6=config.customReminders.filter(r=> r.enabled);if(_0x6.length===0){alert('没有启用的自定义提醒，请先添加并启用提醒。');return;}const _0x7=_0x6[0];NotificationManager.notifyCustomReminder(_0x7);},clearReminderStates(){const config=Config.loadConfig();config.customReminders.forEach(reminder=>{reminder.notifiedDates=[];});Config.saveConfig(config);NotificationManager.resetCustomReminders();alert('已清除所有提醒的通知状态，今天可以重新接收提醒。');},updateEnableState(enabled){const section=document.getElementById('customRemindersSection');const checkbox=document.getElementById('enableCustomReminders');if(section&&checkbox){checkbox.checked=enabled;section.style.display=enabled?'block':'none';}}};